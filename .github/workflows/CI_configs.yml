name: CI_CD
on:
  release:
    types: [created]
  workflow_dispatch:
jobs:
  deploy_dev:
    if: github.event.release.target_commitish == 'dev'
    runs-on: ubuntu-latest
    env:
      VITE_API_URL: ${{ secrets.VITE_API_URL_DEV }}
      VITE_API_CORE_URL: ${{ secrets.VITE_API_CORE_URL_DEV }}

    steps:
      - name: Repository checkout
        uses: actions/checkout@v2
      - name: Connects to VPS via SSH
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{secrets.SERVER_HOST}}
          username: ${{secrets.SERVER_USER}}
          password: ${{secrets.SERVER_PASS}}
          script: |
            cd /home/matrix-code/admin-planify
            git checkout dev --force
            git pull
            npm i
            npm run build

            export VITE_API_URL=${{ secrets.VITE_API_URL_DEV }}
            export VITE_API_CORE_URL=${{ secrets.VITE_API_CORE_URL_DEV }}

            cp -r /home/matrix-code/admin-planify/dist/* /home/app-admin-dev-planify/htdocs/admin.dev.planify.app.br
            cd /home/app-admin-dev-planify/htdocs/admin.dev.planify.app.br
            sudo systemctl reload nginx

      - name: Send Discord Notification
        if: success()
        run: |
          RELEASE_VERSION=$(jq -r '.release.tag_name // "No version specified"' $GITHUB_EVENT_PATH)
          RELEASE_AUTHOR=$(jq -r '.release.author.login // "Unknown"' $GITHUB_EVENT_PATH)
          RELEASE_DESCRIPTION=$(jq -r '.release.body // "No description provided"' $GITHUB_EVENT_PATH)
          CURRENT_TIME=$(date -u +"%Y-%m-%d")

          # Escape newlines for JSON, but keep them as \n for Discord formatting
          FORMATTED_DESCRIPTION=$(echo "$RELEASE_DESCRIPTION" | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')

          PAYLOAD=$(jq -n \
                        --arg content $'ðŸš€ Novo deploy de ADMIN DEV finalizado!\n\n[RELEASE]: '"${RELEASE_VERSION}"$'\n[AUTOR]: '"${RELEASE_AUTHOR}"$'\n[ALTERAÃ‡Ã•ES]:\n'"${FORMATTED_DESCRIPTION}"$'\n[DATA]: '"${CURRENT_TIME}" \
                        --arg username "StatusReport BOT" \
                        '{content: $content, username: $username}')

          curl -H "Content-Type: application/json" -X POST -d "${PAYLOAD}" ${{ secrets.DISCORD_WEBHOOK_URL }}

  deploy_prod:
    if: github.event.release.target_commitish == 'main'
    runs-on: ubuntu-latest
    env:
      VITE_API_URL: ${{ secrets.VITE_API_URL }}
      VITE_API_CORE_URL: ${{ secrets.VITE_API_CORE_URL }}

    steps:
      - name: Repository checkout
        uses: actions/checkout@v2
      - name: Connects to VPS via SSH
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{secrets.SERVER_HOST}}
          username: ${{secrets.SERVER_USER}}
          password: ${{secrets.SERVER_PASS}}
          script: |
            cd /home/matrix-code/admin-planify
            git checkout main --force
            git pull
            npm i

            export VITE_API_URL=${{ secrets.VITE_API_URL }}
            export VITE_API_CORE_URL=${{ secrets.VITE_API_CORE_URL }}

            npm run build

            cp -r /home/matrix-code/admin-planify/dist/* /home/app-admin-planify/htdocs/admin.planify.app.br
            cd /home/app-admin-planify/htdocs/admin.planify.app.br
            sudo systemctl reload nginx

      - name: Send Discord Notification
        if: success()
        run: |
          RELEASE_VERSION=$(jq -r '.release.tag_name // "No version specified"' $GITHUB_EVENT_PATH)
          RELEASE_AUTHOR=$(jq -r '.release.author.login // "Unknown"' $GITHUB_EVENT_PATH)
          RELEASE_DESCRIPTION=$(jq -r '.release.body // "No description provided"' $GITHUB_EVENT_PATH)
          CURRENT_TIME=$(date -u +"%Y-%m-%d")

          # Escape newlines for JSON, but keep them as \n for Discord formatting
          FORMATTED_DESCRIPTION=$(echo "$RELEASE_DESCRIPTION" | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')

          PAYLOAD=$(jq -n \
                        --arg content $'ðŸš€ Novo deploy de ADMIN PROD finalizado!\n\n[RELEASE]: '"${RELEASE_VERSION}"$'\n[AUTOR]: '"${RELEASE_AUTHOR}"$'\n[ALTERAÃ‡Ã•ES]:\n'"${FORMATTED_DESCRIPTION}"$'\n[DATA]: '"${CURRENT_TIME}" \
                        --arg username "StatusReport BOT" \
                        '{content: $content, username: $username}')

          curl -H "Content-Type: application/json" -X POST -d "${PAYLOAD}" ${{ secrets.DISCORD_WEBHOOK_URL }}
